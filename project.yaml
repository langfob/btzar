#===============================================================================

project_name: bdpg_20_variants_all_rs_but_gurobi_1_easy_base
runner_class: RRunner

#===============================================================================

libraries:

#---------------------------------------

    -  name: marxanLibrary

       repo_type: http_zip
       url: http://glass.eres.rmit.edu.au/tzar_input/biodivprobgen/Marxan.zip
       download_mode: ONCE

#===============================================================================

    #  Cloned from:
    #  project.2017_08_16_09_51_am.original_full.yaml
    #  in:
    #  /Users/bill/D/Projects/ProblemDifficulty/pkgs/bdpgxupaper/inst/yamlFiles

    #--------------------

base_params:

        #  BTL - 2014 12 28
        #  This variable captures the tzar output path to hand it to the
        #  tzar emulation code.
    full_output_dir_with_slash: $$output_path$$

    #--------------------
    #--------------------

        #  SET THIS VALUE EVERY TIME...
            #  Runset description to print in output since the runset name has
            #  to be short and tends to be cryptic.  The "|" should force the
            #  saved description string to include newlines in the string.
            #  If you don't want the newlines (i.e., you want one long string),
            #  then use a ">" in place of the "|".
    runset_description: |
        Nectar test example with one run of 20 variants of a single easy 
        Xu problem and all reserve selectors except gurobi, since no nectar 
        licensing on that yet.

    runset_name: $$runset$$
    runset_abbrev: "bdpg20varAllRSbutGurobi"

    run_id: $$run_id$$

    #--------------------

    max_allowed_num_spp: 700  #2000

    #--------------------

    set_rand_seed_at_creation_of_all_new_major_objects: FALSE
    bdpg_run_init_rand_seed: 1763688087

    #---------------------------------------------------------------------------
        #  marxan control parameters
        #
        #  If marxan_use_default_input_parameters is TRUE, then all of these
        #  marxan_... parameters set in this file are ignored and marxan's
        #  default values are used instead.
        #  The one exception to this is the variable marxan_spf_const,
        #  which is a bit different from all the other parameters and is set
        #  in the just below the marxan_... parameters in this file.
    marxan_use_default_input_parameters: FALSE

    marxan_input_parameters_file_name: "$$library_path(marxanLibrary)$$input.dat"

    marxan_dir: "$$library_path(marxanLibrary)$$"
#    marxan_input_dir: "$$library_path(marxanLibrary)$$input/"
#    marxan_output_dir: "$$library_path(marxanLibrary)$$output/"
    marxan_pu_file_name: "pu.dat"
    marxan_spec_file_name: "spec.dat"
    marxan_puvspr_file_name: "puvspr.dat"

    marxan_runmode: 1
    marxan_heurtype: -1
    marxan_num_reps: 100
    marxan_num_iterations: "1000000"
    marxan_spf_rule: "POWER_OF_10"

    #---------------------------------------------------------------------------

    compute_network_metrics: FALSE    #  if FALSE, overrides all other network flags below

    compute_network_metrics_base_COR: TRUE
    compute_network_metrics_base_APP: TRUE
    compute_network_metrics_wrapped_COR: TRUE
    compute_network_metrics_wrapped_APP: TRUE

    use_igraph_metrics:    TRUE

    use_bipartite_metrics: TRUE
    #bipartite_metrics_to_use:     "ALLBUTDD"
#    bipartite_metrics_to_use:     "all_except_slow_indices"
    bipartite_metrics_to_use:     "quick_test"

    #---------------------------------------------------------------------------
    #---------------------------------------------------------------------------

    gen_20_basic_variants: TRUE
    gen_4_basic_variants:  FALSE
    single_action_using_tzar_reps: FALSE

    #---------------------------------------------------------------------------

    do_gurobi: FALSE

    use_given_time_as_limit: FALSE
    time_limit: 22
    use_marxan_time_as_limit: FALSE

    use_gap_limit: FALSE
    gap_limit: 0.005

    #---------------------------------------------------------------------------

    run_marxan: TRUE

    #---------------------------------------------------------------------------

    do_simple_richness_forward: TRUE
    do_simple_richness_backward: TRUE

    #---------------------------------------------------------------------------

    do_unprotected_richness_forward: TRUE
    do_unprotected_richness_backward: TRUE

    #---------------------------------------------------------------------------

    do_zonation_like_forward: TRUE
    do_zonation_like_backward: TRUE

    #---------------------------------------------------------------------------

scenarios:

    - name: easy
      parameters:
            n__num_groups: 5
            alpha__: 0.8
            p__prop_of_links_between_groups: 0.5
            r__density: 0.5

    #--------------------

                #  Parameters for building a multi-problem by wrapping a lognormal
                #  distribution around a base Xu problem.

            gen_multi_bdproblem: TRUE
            wrap_lognormal_dist_around_Xu: TRUE
            allow_imperfect_wrap: TRUE
            desired_Xu_spp_frac_of_all_spp: 0.5
            solution_frac_of_landscape: 0.3
            desired_max_abundance_frac: 0.7
            dep_set_PUs_eligible: FALSE
            add_one_to_lognormal_abundances: FALSE
            max_search_iterations: 500

            plot_rounded_abundances: TRUE

#===============================================================================

